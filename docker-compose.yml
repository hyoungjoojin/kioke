services:
  service-discovery:
    container_name: service-discovery
    restart: unless-stopped
    build:
      context: ./service-discovery
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      - SERVER_PORT=$SERVICE_DISCOVERY_PORT
    ports:
      - $SERVICE_DISCOVERY_PORT:$SERVICE_DISCOVERY_PORT
    networks:
      - service-discovery-network

  api-gateway:
    container_name: api-gateway
    restart: unless-stopped
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:$SERVICE_DISCOVERY_PORT/eureka
      - SERVER_PORT=$API_GATEWAY_PORT
    ports:
      - $API_GATEWAY_PORT:$API_GATEWAY_PORT
    networks:
      - service-discovery-network

  auth-service:
    container_name: auth-service
    restart: unless-stopped
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:$SERVICE_DISCOVERY_PORT/eureka
      - POSTGRES_USER=$AUTH_SERVICE_DATABASE_USER_USERNAME
      - POSTGRES_PASSWORD=$AUTH_SERVICE_DATABASE_USER_PASSWORD
      - SPRING_DATASOURCE_URL=jdbc:postgresql://auth-service-database:5432/$AUTH_SERVICE_DATABASE_NAME
      - SPRING_DATASOURCE_USERNAME=$AUTH_SERVICE_DATABASE_USER_USERNAME
      - SPRING_DATASOURCE_PASSWORD=$AUTH_SERVICE_DATABASE_USER_PASSWORD
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SERVER_PORT=$AUTH_SERVICE_PORT
    ports:
      - $AUTH_SERVICE_PORT:$AUTH_SERVICE_PORT
    depends_on:
      - auth-service-database
    networks:
      - service-discovery-network
      - auth-service-network

  auth-service-database:
    container_name: auth-service-database
    restart: unless-stopped
    image: postgres:17
    env_file:
      - ./.env
    environment:
      - POSTGRES_DB=$AUTH_SERVICE_DATABASE_NAME
      - POSTGRES_USER=$AUTH_SERVICE_DATABASE_USER_USERNAME
      - POSTGRES_PASSWORD=$AUTH_SERVICE_DATABASE_USER_PASSWORD
    volumes:
      - auth-service-data:/var/lib/postgresql/data
    networks:
      - auth-service-network

  user-service:
    container_name: user-service
    restart: unless-stopped
    build:
      context: ./user-service
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:$SERVICE_DISCOVERY_PORT/eureka
      - POSTGRES_USER=$USER_SERVICE_DATABASE_USER_USERNAME
      - POSTGRES_PASSWORD=$USER_SERVICE_DATABASE_USER_PASSWORD
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-service-database:5432/$USER_SERVICE_DATABASE_NAME
      - SPRING_DATASOURCE_USERNAME=$USER_SERVICE_DATABASE_USER_USERNAME
      - SPRING_DATASOURCE_PASSWORD=$USER_SERVICE_DATABASE_USER_PASSWORD
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SECURITY_JWT_KEY=$JWT_TOKEN_SECRET_KEY
      - SECURITY_JWT_EXPIRATION=3600000
      - SERVER_PORT=$USER_SERVICE_PORT
      - SPRING_RABBITMQ_HOST=message-broker
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=user
      - SPRING_RABBITMQ_PASSWORD=password
    ports:
      - $USER_SERVICE_PORT:$USER_SERVICE_PORT
    depends_on:
      - user-service-database
    networks:
      - user-service-network
      - service-discovery-network
      - message-broker-network

  user-service-database:
    container_name: user-service-database
    restart: unless-stopped
    image: postgres:17
    env_file:
      - ./.env
    environment:
      - POSTGRES_DB=$USER_SERVICE_DATABASE_NAME
      - POSTGRES_USER=$USER_SERVICE_DATABASE_USER_USERNAME
      - POSTGRES_PASSWORD=$USER_SERVICE_DATABASE_USER_PASSWORD
    volumes:
      - user-service-data:/var/lib/postgresql/data
    networks:
      - user-service-network

  message-broker:
    container_name: message-broker
    restart: unless-stopped
    image: rabbitmq:4.0.4-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    networks:
      - message-broker-network

  journal-service:
    container_name: journal-service
    restart: unless-stopped
    build:
      context: ./journal-service
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:$SERVICE_DISCOVERY_PORT/eureka
      - SPRING_DATA_MONGODB_HOST=journal-service-database
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=$JOURNAL_SERVICE_DATABASE_NAME
      - SPRING_DATA_MONGODB_USERNAME=$JOURNAL_SERVICE_DATABASE_USER_USERNAME
      - SPRING_DATA_MONGODB_PASSWORD=$JOURNAL_SERVICE_DATABASE_USER_PASSWORD
      - SERVER_PORT=$JOURNAL_SERVICE_PORT
      - SPRING_RABBITMQ_HOST=message-broker
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=user
      - SPRING_RABBITMQ_PASSWORD=password
      - SECURITY_JWT_KEY=$JWT_TOKEN_SECRET_KEY
    ports:
      - $JOURNAL_SERVICE_PORT:$JOURNAL_SERVICE_PORT
    depends_on:
      - journal-service-database
    networks:
      - journal-service-network
      - service-discovery-network
      - message-broker-network

  journal-service-database:
    container_name: journal-service-database
    restart: unless-stopped
    image: mongo:5.0.2
    env_file:
      - ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$JOURNAL_SERVICE_DATABASE_ADMIN_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$JOURNAL_SERVICE_DATABASE_ADMIN_PASSWORD
      - MONGO_INITDB_DATABASE=$JOURNAL_SERVICE_DATABASE_NAME
    volumes:
      - journal-service-data:/data/db
      - ./journal-service/.db.init.sh:/docker-entrypoint-initdb.d/db.init.sh:ro
    networks:
      - journal-service-network

volumes:
  user-service-data:
  auth-service-data:
  journal-service-data:

networks:
  user-service-network:
    driver: bridge
  auth-service-network:
    driver: bridge
  journal-service-network:
    driver: bridge
  service-discovery-network:
    driver: bridge
  message-broker-network:
    driver: bridge
