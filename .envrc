#!/bin/bash

export ROOT_DIRECTORY=$(pwd)
export ENV_FILE=.env
export API_GATEWAY_ENV_FILE=./api-gateway/.env
export SERVICE_DISCOVERY_ENV_FILE=./service-discovery/.env
export JOURNAL_SERVICE_ENV_FILE=./journal-service/.env
export USER_SERVICE_ENV_FILE=./user-service/.env
export AUTH_SERVICE_ENV_FILE=./auth-service/.env

export API_GATEWAY_PORT=31029
export SERVICE_DISCOVERY_PORT=31030
export USER_SERVICE_PORT=31031
export JOURNAL_SERVICE_PORT=31032
export AUTH_SERVICE_PORT=31033

export USER_SERVICE_DATABASE_NAME=user-service-database
export AUTH_SERVICE_DATABASE_NAME=auth-service-database
export JOURNAL_SERVICE_DATABASE_NAME=journal-service-database

info() {
    local MESSAGE="$1"

    echo "[INFO] $MESSAGE" >&1
}

warn() {
    local MESSAGE="$1"

    echo "[WARNING] $MESSAGE" >&1
}

error() {
    local MESSAGE="$1"

    echo "[ERROR] $MESSAGE" >&2
    exit -1
}

create() {
    local FILE="$1"

    if [ ! -f "$FILE" ]; then
        warn "Could not locate file $FILE. Creating empty file $FILE. Some required keys may not be set."
        touch $FILE
    fi
}

check() {
    local FILE="$1"
    local KEY="$2"

    if [ ! -f "$FILE" ]; then
        error "Could not locate file $FILE."
    fi

    if ! grep -q "^$KEY=" "$FILE"; then
        error "Key $KEY does not exist in $FILE."
        return 0
    fi
}

write() {
    local FILE="$1"
    local KEY="$2"
    local VALUE="$3"

    if [ ! -f "$FILE" ]; then
        error "Could not locate file $FILE."
    fi

    if grep -q "^$KEY=" "$FILE"; then
        sed -i "s/^$KEY=.*/$KEY=$VALUE/" "$FILE"
    else
        echo "$KEY=$VALUE" >> "$FILE"
    fi
}

create $ENV_FILE
create $API_GATEWAY_ENV_FILE
create $SERVICE_DISCOVERY_ENV_FILE
create $USER_SERVICE_ENV_FILE
create $AUTH_SERVICE_ENV_FILE
create $JOURNAL_SERVICE_ENV_FILE

check $ENV_FILE "JWT_TOKEN_SECRET_KEY"

check $ENV_FILE "USER_SERVICE_DATABASE_USER_USERNAME"
check $ENV_FILE "USER_SERVICE_DATABASE_USER_USERNAME"

check $ENV_FILE "AUTH_SERVICE_DATABASE_USER_PASSWORD"
check $ENV_FILE "AUTH_SERVICE_DATABASE_USER_PASSWORD"

check $ENV_FILE "JOURNAL_SERVICE_DATABASE_ADMIN_USERNAME"
check $ENV_FILE "JOURNAL_SERVICE_DATABASE_ADMIN_PASSWORD"
check $ENV_FILE "JOURNAL_SERVICE_DATABASE_USER_USERNAME"
check $ENV_FILE "JOURNAL_SERVICE_DATABASE_USER_PASSWORD" 

write $SERVICE_DISCOVERY_ENV_FILE "SERVICE_DISCOVERY_PORT" $SERVICE_DISCOVERY_PORT
write $USER_SERVICE_ENV_FILE "USER_SERVICE_PORT" $USER_SERVICE_PORT
write $AUTH_SERVICE_ENV_FILE "AUTH_SERVICE_PORT" $AUTH_SERVICE_PORT
write $JOURNAL_SERVICE_ENV_FILE "JOURNAL_SERVICE_PORT" $JOURNAL_SERVICE_PORT
write $API_GATEWAY_ENV_FILE "API_GATEWAY_PORT" $API_GATEWAY_PORT

write $ENV_FILE "USER_SERVICE_DATABASE_NAME" $USER_SERVICE_DATABASE_NAME
write $ENV_FILE "AUTH_SERVICE_DATABASE_NAME" $AUTH_SERVICE_DATABASE_NAME
write $ENV_FILE "JOURNAL_SERVICE_DATABASE_NAME" $JOURNAL_SERVICE_DATABASE_NAME

